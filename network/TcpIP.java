package qrxedu.network;

/**
 * @author qiu
 * @version 1.8.0
 */
@SuppressWarnings("all")
public class TcpIP {
    /*
    网络带宽是啥?
    TCP/IP五层协议栈
    1.应用层
    应用层协议：设计一种请求和响应相匹配的组织形式。
    常见的应用层协议模板：
        1.xml：由标签组成:<标签名>内容<标签名>,可读性比较强,但是标签名信息太多了,引入了太多的辅助信息
        xml现在主要用来写一些配置文件
        2.json:当下最流行的一种应用层协议设计格式,
        格式:{键:值,键:值...}  要求键必须是字符串类型(单双引号都可),值不要求.可读性更强,且占用的带宽比较少
        但json中仍然添加了一部分冗余信息(key)

        3.protobuffer:是一种二进制格式的数据,在protobuffer中没有了key而是通过一种特殊的二进制形式来明确对应数据的意义
        同时protobuffer还有对应的IDL文件用来描述特殊的二进制形式的含义,IDL文件只用来辅助,并不真正的传输.
        protubuffer的可读性不高(对调试不友好),但效率高.
        最知名的应用层协议:HTTP!!!
    2.传输层
    最常见的协议是TCP和UDP
    TCP的特点:1.有连接 2.可靠 3.面向字节流 4.全双工  UDP的特点:1.无连接 2.不可靠 3.面向数据报 4.全双工

    UDP的数据报的格式:UDP报头(4*2个字节) + UDP数据载荷(完整的应用层数据)
    UDP报头:源端口,目的端口,UDP报文长度(字节),校验和:检验应用层数据是否正确,网络上传递的数据的本质是光信号,电信号.这些数据在传输的过程中如果收到外界
    因素的影响可能导致数据被修改
    因为报文长度是2个字节,导致UDP数据的长度在65535之内,进而导致UDP不能传一个大的数据,除非在应用层将数据进行分包(但这个步骤太麻烦了:丢包\顺序不对)
    有效的解决方法是用TCP,TCP不限制数据的大小.

    
    3.网络层
    4.数据链路层
    5.物理层
     */
}
